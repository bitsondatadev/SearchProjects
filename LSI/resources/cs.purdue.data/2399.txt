<DOC>
<DOCNO> http://www.cs.purdue.edu/homes/ayg/CS251_FALL_99/ASSN_99/hw4/hw4.html </DOCNO>
<html> <head> <title>Data Structures Homework 4, Fall 1999</title> </head> <body bgcolor="#FFFFFF"> <font align = left face = helvetica> <h1>Data Structures Homework 4, Fall 1999</h1> <h2>Due: Friday, Oct 15, 1999, 12 PM (noon) Using Turnin</h2> Absolutely no late submissions accepted since solutions will be posted soon after the deadline. <p>In this project, you will construct an implementation of the Priority Queue interface using a heap. You will then use the heap methods to implement the unchecked list from your previous assignment. Instructions on files to submit will be made available with turnin instructions. DO NOT CHANGE ANY OF THE INTERFACES/ ABSTRACT CLASSES I GIVE YOU. If your program does not compile with these interfaces/abstract classes, the TAs/I will not be responsible for it. Your heap data structure should be built using the binary tree interface, and this interface should be implemented using a doubly linked structure. The homework closely follows description of these data structures in your textbook. <p>This assignment involves you writing the following classes: <ul> <li> HeapPriorityQueue, which uses a heap to implement the priority queue ADT using a binary tree. <li> LinkedBinaryTree, which implements the binary tree ADT using a linked structure. <li> Your unchecked list class from previous assignment rewritten to use your heap methods. </ul> <p> The following files will be useful. <ul> <li> <a href="classes/BinaryTree.java"> BinaryTree.java</a> (A Simple Binary Tree Interface) <li> <a href="classes/Container.java"> Container.java</a> <li> <a href="classes/InvalidPositionException.java"> InvalidPositionException.java</a> <li> <a href="classes/Item.java"> Item.java</a> <li> <a href="classes/Node.java"> Node.java</a> <li> <a href="classes/IntegerComparator.java"> IntegerComparator.java</a> <li> <a href="classes/Position.java"> Position.java</a> <li> <a href="classes/driver.java"> driver.java</a> (This shows you how the LinkedBinaryTree works). <li> <a href="classes/PriorityQueue.java"> PriorityQueue.java</a> (A Priority Queue Interface) </ul> </body> </html> </body></html> </body></html>
</DOC>
