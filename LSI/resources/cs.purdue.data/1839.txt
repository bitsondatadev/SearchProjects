<DOC>
<DOCNO> http://www.cs.purdue.edu/about_us/annual_reports/95/AR95Book-132.html </DOCNO>
<!-- Generated by Harlequin Webmaker 2.1.3; Transducer 1.0.2 --> <HTML> <HEAD> <TITLE> Proxima: Contact and Collision Support for Virtual Environments</TITLE> </HEAD> <BODY> <A NAME=HEADING132></A> <A HREF="AR95Book-133.html"><IMG ALIGN = BOTTOM SRC = "Bnext.gif"></A><A HREF="AR95Book-131.html"><IMG ALIGN = BOTTOM SRC = "Bprev.gif"></A><A HREF="AR95Book-66.html"><IMG ALIGN = BOTTOM SRC = "Bup.gif"></A><A HREF="AR95Book-1.html"><IMG ALIGN = BOTTOM SRC = "Btop.gif"></A><A HREF="AR95Book-2.html"><IMG ALIGN = BOTTOM SRC = "Bcontent.gif"></A><BR><A HREF="AR95Book-133.html">[Next] </A><A HREF="AR95Book-131.html">[Previous] </A><A HREF="AR95Book-66.html">[Up] </A><A HREF="AR95Book-1.html">[Top] </A><A HREF="AR95Book-2.html">[Contents]</A> <P> <A NAME=HEADING132-0></A> <H1> Proxima: Contact and Collision Support for Virtual Environments</H1> Principal Investigator: <A HREF=AR95Book-43.html>George Vanecek, Jr.</A><P> Sponsor: NIST<P> <IMG SRC="goldRule.gif" width =100%> <P> Systems that simulate virtual environments (such as our Project Newton or the new project Isaac [4]) or deal with physical objects depend on geometric support capable of at least representing the static environment and the moving objects, and operations providing the n-body collision detection and a two-body contact analysis of objects in close proximity[3].<P> Addressing these requirements, we have developed the multi-dimensional space partitioning tree and the Brep-Index data structures, and the back-face culling algorithm[2]. Their combined use was shown to greatly improve the computational efficiency of classifying geometric entities with respect to polyhedral objects, and to support high-level operations such as collision detection of objects in close proximity and contact analysis of moving objects. The multidimensional space partition (MSP) tree data structure is an extension of the classical binary space partition tree. By itself, the MSP tree is a sufficient representation for polyhedral objects. However, when the MSP tree is combined with the boundary representation of the particular object, it becomes a convenient spatial index into the boundary representation. We call such a unified representation the Brep-index[1]. Its use has been demonstrated to reduce the typically linear-time classification problems to sublinear time, and to do so in a robust way. Consequently, we built an efficient and robust collision detection and analysis support package for the Newton simulation system.<P> The Brep-index and the back-face culling, along with the supported operations, are packaged into a system called Proxima[1]. It is written in C++ and it is provided as a library for other applications to use. In Proxima, objects are invariant and are given externally; so any existing solid modeling systems, such as ACIS can be used to create the needed objects.<P> Currently the project is proceeding in the development of additional geometric operations based on a multi-resolution Brep-index and back-face culling. Such a system could support a broad range of applications such as physical based simulations, ray tracing, robot navigation systems, and other systems that require detailed geometric information about positions of the objects. <P> <IMG SRC="goldRule.gif" width =100%> <ADDRESS>CS Annual Report - 19 APR 1996</ADDRESS> <A HREF="AR95Book-133.html"><IMG ALIGN = BOTTOM SRC = "Bnext.gif"></A><A HREF="AR95Book-131.html"><IMG ALIGN = BOTTOM SRC = "Bprev.gif"></A><A HREF="AR95Book-66.html"><IMG ALIGN = BOTTOM SRC = "Bup.gif"></A><A HREF="AR95Book-1.html"><IMG ALIGN = BOTTOM SRC = "Btop.gif"></A><A HREF="AR95Book-2.html"><IMG ALIGN = BOTTOM SRC = "Bcontent.gif"></A><BR><A HREF="AR95Book-133.html">[Next] </A><A HREF="AR95Book-131.html">[Previous] </A><A HREF="AR95Book-66.html">[Up] </A><A HREF="AR95Book-1.html">[Top] </A><A HREF="AR95Book-2.html">[Contents]</A> <P> </BODY> </HTML> </HTML>
</DOC>
