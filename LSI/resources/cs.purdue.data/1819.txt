<DOC>
<DOCNO> http://www.cs.purdue.edu/about_us/annual_reports/95/AR95Book-107.html </DOCNO>
<!-- Generated by Harlequin Webmaker 2.1.3; Transducer 1.0.2 --> <HTML> <HEAD> <TITLE> Effectiveness and Performance in Software Testing</TITLE> </HEAD> <BODY> <A NAME=HEADING107></A> <A HREF="AR95Book-108.html"><IMG ALIGN = BOTTOM SRC = "Bnext.gif"></A><A HREF="AR95Book-106.html"><IMG ALIGN = BOTTOM SRC = "Bprev.gif"></A><A HREF="AR95Book-66.html"><IMG ALIGN = BOTTOM SRC = "Bup.gif"></A><A HREF="AR95Book-1.html"><IMG ALIGN = BOTTOM SRC = "Btop.gif"></A><A HREF="AR95Book-2.html"><IMG ALIGN = BOTTOM SRC = "Bcontent.gif"></A><BR><A HREF="AR95Book-108.html">[Next] </A><A HREF="AR95Book-106.html">[Previous] </A><A HREF="AR95Book-66.html">[Up] </A><A HREF="AR95Book-1.html">[Top] </A><A HREF="AR95Book-2.html">[Contents]</A> <P> <A NAME=HEADING107-0></A> <H1> Effectiveness and Performance in Software Testing</H1> Principal Investigators: <A HREF=AR95Book-33.html>Aditya P. Mathur</A>, <A HREF=AR95Book-36.html>Vernon J. Rego</A><P> Research Assistants: Sailesh Krishnamurthy<P> Sponsors: NSF, Bell Communications Research, Center for Advanced Studies at IBM; Toronto.<P> <IMG SRC="goldRule.gif" width =100%> <P> Our research is concerned with issues of relative cost-effectiveness of various testing methods, and in par ticular, the effectiveness of data flow and mutation testing. Our work, experimental in nature, answers ques tions such as: Which of these two test adequacy criteria is more difficult to satisfy? What is the incremental cost of using mutation testing after data flow testing has been used? What predictions can be made about the reli ability of a program after it has been tested using data flow and/or mutation testing? How does one reduce the cost of using mutation testing without adversely affecting its error exposing capability? <P> To answer the above questions we are presently conducting experiments using a suite of commonly used applications. This work is being done using ATAC, a proprietary data flow testing tool for C programs released by Bellcore for use in our research. In addition we are also using MOTHRA and PROTEUM, two tools for mu tation testing. <P> Another issue that becomes critical when doing the research described above and also limits the utility of mutation testing has to do with performance. A tremendous amount of computing power is required for rou tine mutation testing, and this can become a serious bottleneck when large programs are to be tested. <P> This has led to our research on Compiler Integrated Testing (CIT) in which we focus on issues that arise when one needs to integrate mutation and data flow testing into a compiler. CIT is a new and novel concept that, once fully developed, is likely to completely change the way testing tools are currently designed.<P> <IMG SRC="goldRule.gif" width =100%> <ADDRESS>CS Annual Report - 19 APR 1996</ADDRESS> <A HREF="AR95Book-108.html"><IMG ALIGN = BOTTOM SRC = "Bnext.gif"></A><A HREF="AR95Book-106.html"><IMG ALIGN = BOTTOM SRC = "Bprev.gif"></A><A HREF="AR95Book-66.html"><IMG ALIGN = BOTTOM SRC = "Bup.gif"></A><A HREF="AR95Book-1.html"><IMG ALIGN = BOTTOM SRC = "Btop.gif"></A><A HREF="AR95Book-2.html"><IMG ALIGN = BOTTOM SRC = "Bcontent.gif"></A><BR><A HREF="AR95Book-108.html">[Next] </A><A HREF="AR95Book-106.html">[Previous] </A><A HREF="AR95Book-66.html">[Up] </A><A HREF="AR95Book-1.html">[Top] </A><A HREF="AR95Book-2.html">[Contents]</A> <P> </BODY> </HTML> </HTML>
</DOC>
