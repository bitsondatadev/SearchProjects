<DOC>
<DOCNO> http://www.cs.purdue.edu/homes/ci/Panorama.html </DOCNO>
<html><head><title>HPC Compiler Project </title></head><body> <H1>Compilers and Programming Interface for High-End Computing </h1> <body bgcolor="#ffffff"> <br><br> <strong> Principal Investigators: </strong> Zhiyuan Li, Ananth Grama and Ahmed Sameh <br><br> <strong> Participating Students: </strong> Lixia Liu, Russel Meyers, Dasarath Weeratunge <br><br> <strong> Current Sponsors: </strong> National Science Foundation <br><br> Department of Computer Science continues its cutting-edge investigation of compiler techniques for high-end computing systems. Compiler prototypes are developed to support experimentation of advanced compiler techniques. Such prototypes are also used as tools for the study of various performance issues concerning high-end application programs and high-end computing systems. Some of the recent results: <ul> <li> New loop constructs designed to support development of asynchronous algorithms for relaxed synchronization [<a href="draft/lcpc08_abst.pdf"> LCPC08 </a>, to appear] <li> Software tools and performance models for memory behavior analysis on parallel programs. (<a href="http://portal.acm.org/citation.cfm?id=1375527.1375579&coll=portal&dl=ACM&type=series&idx=SERIES383&part=series&WantType=Proceedings&title=ICS&CFID=34359221&CFTOKEN=45357388"> [ACM-ICS08-1.pdf] </a>). <li> Interprocedural analysis, predicate analysis, and array dataflow analysis to uncover parallell operations <a href="draft/ieeese.ps"> [IEEESE] </a> <li> Compiler-automated program transformation to improve data locality, reduce memory requirement and enhance cache performance. <ul> <li> Skewed loop blocking <a href="draft/toplas.pdf"> [TOPLAS2004] </a> <a href="draft/pldi.ps"> [PLDI99] </a> <li> Array contraction enabled by loop shifting and loop fusion <a href="draft/contract.html"> [IEEE-TC2005] </a> <a href="draft/ijpp.pdf"> [IJPP2005] </a> <a href="draft/ics01.pdf"> [ICS2001] </a> </ul> <li> Efficient use of register files (<a href="http://portal.acm.org/citation.cfm?id=1375527.1375574&coll=portal&dl=ACM&type=series&idx=SERIES383&part=series&WantType=Proceedings&title=ICS&CFID=34359221&CFTOKEN=45357388"> [ACM-ICS08-2.pdf] </a>) <li>Data communication analysis for task partitioning on distributed systems <a href="draft/sc03.html"> [SC2003] </a> <li>Cache-sensitive parallel-task partitioning <a href="draft/pact99.ps"> [PACT1999] </a> <li>Smart page mapping to use heterogeneously partitioned caches <a href="draft/ispass04.html"> [ISPASS2004] </a> and <a href="draft/lctes05.pdf"> [LCTES2005] </a> <li> Compiler automated software scheme for computation reuse <a href="draft/cgo04.html"> [CGO2004] </a> </ul> Drs. Zhiyuan Li, Ananth Grama, and Ahmed Sameh are also investigating a programming interface that supports the development of loosely synchronized numerical algorithms to overcome memory and communication latencies on high-end computing systems. Experiments show that, when applied properly, large sparse-matrix problems derived from PDEs can be solved significantly faster by more relaxed dataflow and synchronization than using the strict dataflow model in the original algorithms. As an example, <a href="draft//MG_2D_larger_speedup.eps"> this figure </a> shows the good speedup (over a single processor) achieved by the new method applied to a two-dimensional multi-grid problem, in contrast to the poor speedup obtained by the original code. Notice that the convergence rates of both versions are nearly the same, <a href="draft/MG_2D_larger_converge.eps"> as this figure shows</a>. <br><br> <a href="http://www.cs.purdue.edu/people/li"> Back to Li's home page </a> </a>
</DOC>
