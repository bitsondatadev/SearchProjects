<DOC>
<DOCNO> http://www.cs.purdue.edu/homes/peugster/Ribbons/ </DOCNO>
<head> <!--mstheme--><link rel="stylesheet" href="deep1011.css"> <meta name="Microsoft Theme" content="deepblue 1011"> </head> <body> <p><font size="6">Ribbons</font></p> <p>&nbsp;</p> <p><font size="4">Rationale</font></p> <p><font size="2"><i>Multi-processing</i> undoubtedly represents one of the major challenges for computer sciencists. Through the advent of multi-core computers, but also by the need for programs to execute subcomponents in isolation from each other or with lower privileges, we are all facing challenges due to multi-processing. Isolation between unrelated componenets is relevant in such settings to ensure both efficiency as well as security. </font></p> <p><font size="2"> </font></p> <p>&nbsp;</p> <p><font size="4">Approach</font></p> <p><font size="2"> Ribbons is a shared memory programming model that allows for more implicit sharing of memory than processes but is more restrictive than threads. Ribbons structure the heap into protection domains. Privileges between these protection domains are carefully controlled in order to confine certain portions of computation. </font></p><font size="2"> RibbonJava is a programming language implementing this ribbons model, to easily create or port programs to use the model. RibbonJava relies on the following three thrusts:<p> <ol> <li><font size="2"> The RibbonJava programming language is a backwards-compatible extension of Java. This language allows us to capture and study the progress and isolation properties of applications through a formal subset of the language. </font></li> <li><font size="2"> Building on JikesRVM we implement RibbonJava by leveraging existing memory protection mechanisms in modern hardware and operating systems. </font></li><li><font size="2"> In particular, ribbons exploit a custom memory allocator currently implemented in Linux in user space. We plan on porting this allocator to the kernel level. </font></li> <font size="2"> </ol> In a recent <a href="RJ.pdf">report</a> to be presented at <a href="http://splashcon.org/2011">SPLASH 2011</a> we describe the refactoring of Apache Tomcat to use ribbons for application isolation, discuss the refactoring's design and complexity, and evaluate performance using the SPECweb2009 benchmark. Since our support avoids the overhead of inline security checks and read or write barriers, we observe minor overhead in microbenchmarks and the DaCapo benchmark suite. <p>&nbsp;</p> <p><font size="4">Support</font></p> <p><font size="2">This project is currently financially supported by the National Science Foundations through grants 0834619 and 1117065.</font></p> <p>&nbsp;</p> <p><font size="4">Members</font></p> <p><a href="http://www.kevinjhoffman.com">K. Hoffman</a>, <a href="http://www.cs.purdue.edu/homes/peugster/"><font size="2">P. Eugster</font></a><font size="2">. <p>&nbsp;</p> <p><font size="4">Former Members</font></p> <p>H. Metzger<font size="2">. <p>&nbsp;</p> </body> </body>
</DOC>
