<DOC>
<DOCNO> http://www.cs.purdue.edu/academic_programs/courses/canonical_syllabi/cs240.shtml </DOCNO>
<HTML> <HEAD><TITLE>CS 240: Programming in C</TITLE></HEAD> <body text="#000000" link="#B1946C" vlink="#6F6F6F" alink="#818501" bgcolor="#FFFFFF" topmargin="1"> <table border="0" cellspacing="0" cellpadding="0" width="640"> <tr> <td><a target="_top" href="http://www.cs.purdue.edu/"><img src="/images/lib/headings/subpagetitle.jpg" alt="Department of Computer Sciences @ Purdue University" align="left" hspace="0" vspace="0" border= "0" /></a><br clear="all" /> <a target="_top" href="http://www.cs.purdue.edu/search/"><img src="/images/lib/nav/search.jpg" alt= "Search" align="left" hspace="0" vspace="0" border="0" /></a> <img src="/images/lib/nav/div.jpg" alt="|" align="left" hspace="0" vspace="0" /> <a target="_top" href= "http://www.cs.purdue.edu/resources/"><img src="/images/lib/nav/general_information.jpg" alt="General Information" align="left" hspace="0" vspace="0" border="0" /></a> <img src= "/images/lib/nav/div.jpg" alt="|" align="left" hspace="0" vspace="0" /> <a target="_top" href= "http://www.cs.purdue.edu/academic_programs/"><img src="/images/lib/nav/academics.jpg" alt="Academics" align="left" hspace="0" vspace="0" border="0" /></a> <img src="/images/lib/nav/div.jpg" alt="|" align= "left" hspace="0" vspace="0" /> <a target="_top" href="http://www.cs.purdue.edu/research/"><img src= "/images/lib/nav/research.jpg" alt="Research" align="left" hspace="0" vspace="0" border="0" /></a> <img src="/images/lib/nav/div.jpg" alt="|" align="left" hspace="0" vspace="0" /> <a target="_top" href= "http://www.cs.purdue.edu/directory/"><img src="/images/lib/nav/people.jpg" alt="People" align="left" hspace="0" vspace="0" border="0" /></a> <img src="/images/lib/nav/div.jpg" alt="|" align="left" hspace= "0" vspace="0" /> <a target="_top" href="http://www.cs.purdue.edu/external_relations/"><img src= "/images/lib/nav/external_relations.jpg" alt="External Relations" align="left" hspace="0" vspace="0" border="0" /></a></td> </tr> </table> <p></p> <TABLE WIDTH="600"> <TR><TD ALIGN="CENTER"> <FONT FACE="Arial,Helvetica" SIZE="+3"> <B>CS 240: Programming in C</B> </FONT> </TD></TR> </TABLE><P> <TABLE WIDTH="700"> <TR><TD> <FONT FACE="Arial,Helvetica"> <!-- Number: CS 240<BR> Title: Programming in C<BR> Prerequisite(s): CS 180<BR> Co-requisite(s):<BR> Class Hours: 2<BR> Lab Hours: 2<BR> Credit Hours: 3<P> Catalog Description: Programming in C for students who know Java: preprocessor, structures, pointers, dynamic memory allocation, streams, string handling, header files, process control, interprocess communication, threads, interrupts, software engineering principles, features of C++. --> List of Topics (By Week):<P> 1. The C compilation model: Preprocessor, C compiler, some useful compiler options, using libraries, UNIX library functions<P> 2. C program structure: Types, precision, constants, variables, simple I/O, arithmetic operations, comparison operators, logical operators, order of precedence<P> 3. Representation and Control Flow: Underlying binary representation, bitwise operations, sizeof(), if-then-else, ? operator, switch, for, while, do-while, break, continue, nesting, lexical blocks<P> 4. Functions: Function definitions, scope, static modifier, register modifier, Void functions, functions and arrays, function prototyping, Header files, preprocessor macros #define, #undef, #include, #if, preprocessor compiler control, other preprocessor commands<P> 5. Arrays and strings<P> 6. Software Engineering: Design, testing<P> 7. Pointers: Pointers and functions, pointers and arrays, arrays of pointers, multidimensional arrays and pointers, static initialization of pointer arrays, pointers and structures, common pointer pitfalls, pointers to pointers, command line input, pointers to a function<P> 8. Dynamic memory allocation: Malloc(), free(), word-alignment, structures<P> 9. Dynamic structures and further data types: Unions, bit fields, coercion or type-casting, enumerated types, Lists, trees<P> 10. Streams: Predefined streams, redirection, formatted I/O<P> 11. File access and directory system calls: Directory handling functions, file manipulation routines, creating temporary files<P> 12. C, UNIX, and standard libraries: Integer functions, random numbers, string conversion, searching and sorting, mathematics, Makefiles, header files, advantages of using several files, how to divide a program between several files, organization of data in each file<P> 13. Processes and threads: Running UNIX commands from C, exec functions, fork(), wait(), exit(), interprocess communication (IPC), pipes, message queues, semaphores, shared memory<P> 14. Interrupts and signals: interrupts and signals, sockets, synchronization<P> 15. Features of C++: Function overloading, classes and objects, data members, member functions, constructor functions, default constructor functions, destructor functions, member function prototypes, member function default arguments, inheritance, friend functions and classes, overloaded member functions, virtual functions, class scope, ``this'' pointer, object instantiation, access specifiers private and public, encapsulation, information hiding, private data members, public member functions, private member functions, array of class objects<P> 2004.06 </FONT> </TR></TD> </TABLE> </BODY> </HTML> </HTML>
</DOC>
