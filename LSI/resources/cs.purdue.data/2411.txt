<DOC>
<DOCNO> http://www.cs.purdue.edu/homes/ayg/CS251_FALL_99/ASSN_99/hw8/hw8.html </DOCNO>
<html> <head> <title>Data Structures Homework 8, Fall 1999</title> </head> <body bgcolor="#FFFFFF"> <font align = left face = helvetica> <h1>Data Structures Homework 8, Fall 1999</h1> <h2>Due: Dec 8, 1999, 12 PM using turnin </h2> Absolutely no late submissions accepted since solutions will be posted soon after the deadline. <br> <br> In this project, you will implement a Red-Black Tree interface and use it for your checked list (instead of the Hash Table used in HW6). Construct a concrete class, RedBlackTree, which implements the following interface: <pre> public interface RedBlackLocator { public int size(); public boolean isEmpty(); public Position find(Object k); // Return position for item (k',e) w/ k=k' public Position insert(Object k, Object o); // Insert (k,o), get back Position public Object remove(Position l); // Remove item at locator l } </pre> Your class should have a constructor that accepts a Comparator object and builds an initially-empty red-black tree. Use the comparator object from last programming assignment. <p> Use the rest of the classes from the solution to the previous homework for implementing and testing solution to this homework. <br> </body></html> </body></html>
</DOC>
