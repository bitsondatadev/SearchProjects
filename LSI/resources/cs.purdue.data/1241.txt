<DOC>
<DOCNO> http://www.cs.purdue.edu/homes/xyzhang/spring07/ </DOCNO>
<BODY BGCOLOR="#FFFFFF" > <font face="helvetica"> <h2>CS 590F<BR> <i>Software Reliability</i><BR></h2> <hr> <P> <td> <b>Instructors</b>: <a href="http://www.cs.purdue.edu/homes/xyzhang">Xiangyu Zhang</a> <br><br> <b>Office</b>: LWSN 3154K <br> <b>Tele</b>: 49-69415 <br> <b>Email</b>: <a href="mailto:xyzhang@cs.purdue.edu">xyzhang@cs.purdue.edu</a> <br> <b>Meeting Place</b>: <a href="http://www.purdue.edu/campus_map/areas/def_789.html">BRNG B232 </a> <br> <b>Meeting Times</b>: 11:30AM-12:45PM, MW <br> <b>Office Hours</b>: 1:00-2:00PM, MW <br> <b>Class Homepage</b>: http://www.cs.purdue.edu/homes/xyzhang/spring07/ <br> <hr> <b><a href="schedule.html">Schedule and Lecture Notes</a></b><br><br> <b><a href="reading.html">Reading List</a></b> <br><br> <b>Potential Projects</b> </td><tr> <hr> <P> <h3>Course Description</h3> Mordern machines become so powerful that they can easily satisfy users' requirements on performance. Besides making software running fast, developers pay more and more attention to issues such as robustnesss, quality, maintenance, data/code privacy, and security. In this course students will study recent innovations in the development of software based solutions to the reliability related problems. More specifically, this course covers: <UL> <LI> Fault localization. The techniques include program slicing, static program analysis, data mining, delta debugging, and statistical debugging. New directions such as failure oblivious computing, and debugging multi-threaded programs will also be explored. <LI> Security. The focus will be on how to apply program analysis to addressing security related problems. The techniques include information flow, intrusion detection, malware detection, and sql injection attacks. <LI> Testing. The techniques include test generation, and the recent advance of combining testing with model checking. <LI> Hotch-potch. Again, the focus is on how program analysis can be applied to solving miscellaneous interesting problems such as data uncertainty. </UL> <h3><em>Relevant Conferences and Journals in</em><br> Software Engineering, Programming Languages and Compilers<br> & Operating Systems.</h3> <UL> <li><b>FSE, ESEC-FSE</b> - ACM SIGSOFT Symposium on Foundations of Software Engineering <li><b>PLDI</b> - ACM SIGPLAN Conference on Programming Language Design and Implementation. <li><b>ASPLOS</b> - International conference on Architectural Support for Programming Languages and operating Systems. <li><b>ICSE</b> - SIGSOFT/IEEE International Conference on Software Engineering. <li><b>ASE</b> - IEEE International Conference on Automated Software Engineering. <li><b>ISSTA</b> - ACM SIGSOFT International Symposium on Software Testing and Analysis. <li><b>ICSM</b> - IEEE International Conference on Software Maintenance. Engineering. <li><b>POPL</b> - ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages. <li><b>AADEBUG</b> - International Symposium on Automated and Analysis-Driven Debugging. <li><b>TACAS</b> - International Conference on Tools and Algorithms for Construction and Analysis of Systems. <li><b>TSE</b> - IEEE Transactions on Software Engineering. <li><b>JASE</b> - Journal of Automated Software Engineering. <li><b>TOSEM</b> - ACM Transactions on Software Engineering and Methodology. <li><b>TOPLAS</b> - ACM Transactions on Programming Languages and Systems. <li><b>TACO</b> - ACM Transactions on Architecture and Code Optimization. <li><b>MICRO</b> - IEEE/ACM International Symposium on Microarchitecture. <li><b>DSN</b> - International Conference on Dependable Systems and Networks. <li><b>OSDI</b> - USENIX Symposium on Operating Systems Design and Implementation. <li><b>SOSP</b> - ACM Symposium on Operating Systems Principles. <li><b>USENIX</b> - USENIX Annual Technical Conference. </UL> <P> <hr> <h3>Grading (draft).</h3> <UL> <li>Two paper presentations (40%). <li>Project report (35%). <li>Project presentation (15%). <li>Attendance and class participation (10%). </UL> <hr> <hr>
</DOC>
