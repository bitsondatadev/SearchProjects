<DOC>
<DOCNO> http://www.cs.purdue.edu/homes/xyzhang/reverse.html </DOCNO>
<!dOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"> <HTML><HEAD><TITLE>Xiangyu's Projects - Reverse Engineering</TITLE> <META http-equiv=Content-Type content="text/html; charset=iso-8859-1"> <META content=xxx name=Author> <META content="MSHTML 6.00.2800.1264" name=GENERATOR></HEAD> <BODY text=#000000 vLink=#cc0000 aLink=#cc0000 link=#cc0000 background="figures/yellowbg.jpg"> <STYLE type=text/css>A { TEXT-DECORATION: none } </STYLE> <h2> Reverse Engineering Binary Programs and Its Security Applications</h2> <img border=0 width=800 height=5 src="figures/line.bmp"> <p> This project aims to develop techniques to reverse engineer functionalities and data structures of binary executables without any symbolic information. It has many security applications. For example, understanding the functionality of code segments is critical to determining the existence of any hidden malicious logic; understanding the internal representation of critical data structures (e.g. the data structure for network connections in a browser) is key for forensic analysis. <!-- The basic idea is to execute the binary and observe the structural and data f low properties of the executions, and finally project such properties to the program artifacts that we are interested in. --!> </p> <p> Our contributions are highlighted as follows. <ul> <li> We have developed a technique that <font size=3><b>reverse engineers data structure definitions</b></font>, including both syntactic and semantic information, from a given binary. It is essentially a type inference algorithm on execution traces (instead of programs) <a href="Comp/ndss10.pdf">[NDSS'10]</a>. We also developed a memory forensics technique that can identify instances of such data structures from memory snapshots. It features deriving unique graphical signatures from the data structure definitions. The signature of a data structure is essentially a points-to subgragh of the data structure that is not isomorphic to the signatures of others <a href="Comp/ndss11.pdf">[NDSS'11]</a>. </li> <li> We have developed a technique that can <font size=3><b>identify key code segments that deliver functionalities</b></font> that are of interest to attackers, such as sending emails and storing files. The technique is also capable of semi-automatically mutating the code segments so that they can be reused for malicious purpose. For example, we can mutate the parameters to function <em> send_mail()</em> in <em> pine</em> so that a copy of each user email is steathly sent to the attacker <a href="Comp/dsn10.pdf">[DSN'10]</a>. </li> <li> We have developed techniques to <font size=3><b>reverse engineer the syntax of program inputs</b></font> <a href="Comp/fse08.pdf">[FSE'08]</a>, which would be meaningful for testing, and the syntax of network protocols <a href="Comp/NDSS08.pdf">[NDSS'08]</a>. <li> We have developed a technique that can detect vulnerabilities in binary programs and automatically generate exploits. The technique does not rely on symbolic exection, but rather on dependence tracing. It can scale to complex programs <a href="Comp/dsn08.pdf">[DSN'08]</a>. </ul> </p> <h3>Funding</h3> <table> <tr height="40"> <td valign="top" height="40"><img align="left" width="70" height="35" BORDER=0 src="figures/ngc.jpg" alt=""></a></td> <td height="40" valign="top"><font face="Arial" size="2"> <i> Binary Based Data Structure Reverse Engineering for Memory Forensics and Application Vulnerability Discovery</i></a>, Northrop Grumman CyberSecurity Research Consortium, 2010-2011.</td> </tr> <tr height="40"> <td valign="top" height="40"><img align="left" width="42" height="35" BORDER=0 src="figures/nsf.gif" alt=""></a></td> <td height="40" valign="top"><a href="https://www.fastlane.nsf.gov/servlet/showaward?award=1049303"> <font face="Arial" size="2"> <i> EAGER: Binary-based Data Structure Revelation for Memory Forensics</i></a>, NSF-TC-1049303, 2010-2012.</td> </table> <h3>Students</h3> <ul> <li> <a href="http://www.cs.purdue.edu/homes/zlin">Zhiqiang Lin</a> (On Market)<br> </li> </ul> <h3>Publications</h3> <table> <tr> <td align="left" valign="top"> <font color="#660000" > <b>NDSS</b></font></td> <td align="left" valign="top"> <b>Z. Lin, J. Rhee, X. Zhang, D. Xu, and X. Jiang</b>. SigGraph: Brute Force Scanning of Kernel Data Structure Instances Using Graph-based Signatures <em>,<br>the 17th Network and Distributed System Security Symposium, 2011. </em><br> [<a href="Comp/ndss11.pdf">abstract</a>][<a href="Comp/ndss11.pdf">pdf</a>] </font> </td> </tr> <tr> <td align="left" valign="top"> <font color="#660000" > <b>DSN</b></font></td> <td align="left" valign="top"> <b>Z. Lin, X. Zhang and D. Xu </b>. Reuse-Oriented Camouflaging Trojan: Vulnerability Detection and Attack Construction <em>,<br> the 40th Annual IEEE/IFIP International Conference on Dependable Systems and Networks, 2010. </em><br> [<a href="http://www.computer.org/portal/web/csdl/doi/10.1109/DSN.2010.5544305">abstract</a>][<a href="Comp/dsn10.pdf">pdf</a>] </font> </td> </tr> <tr> <td align="left" valign="top"> <font color="#660000" > <b>NDSS</b></font></td> <td align="left" valign="top"> <b>Z. Lin, X. Zhang and D. Xu</b>. Automatic Reverse Engineering of Data Structures from Binary Execution <em>,<br> the 17th Network and Distributed System Security Symposium, 2010. </em><br> [<a href="Comp/ndss10.pdf">abstract</a>][<a href="Comp/ndss10.pdf">pdf</a>] </font> </td> </tr> <tr> <td align="left" valign="top"> <font color="#660000" > <b>FSE</b></font></td> <td align="left" valign="top"> <b> Z Lin and X. Zhang </b>. Deriving Program Input Syntactic Structure from Execution <em>,<br> 16th ACM SIGSOFT Symposium on Foundations of Software Engineering, 2008. </em><br> [<a href="http://portal.acm.org/citation.cfm?id=1453101.1453114&coll=DL&dl=ACM&CFID=18721242&CFTOKEN=74393333#abstract">abstract</a>][<a href="Comp/fse08.pdf">pdf</a>] </font> </td> </tr> <tr> <td align="left" valign="top"> <font color="#660000" > <b>DSN</b></font></td> <td align="left" valign="top"> <b> Z. Lin, X. Zhang, and D. Xu </b>. Convicting Remote Exploitable Vulnerabilities: An Efficient Input Provenance Based Approach <em>,<br> IEEE/IFIP International Conference on Dependable Systems and Networks, 2008. </em><br> [<a href="Comp/dsn08.pdf">abstract</a>][<a href="Comp/dsn08.pdf">pdf</a>] </font> </td> </tr> <tr> <td align="left" valign="top"> <font color="#660000" > <b>NDSS</b></font></td> <td align="left" valign="top"> <b> Z. Lin, X. Jiang, D. Xu, and X. Zhang</b>. Automatic Protocol Format Reverse Engineering Through Context-Aware Monitored Execution <em>,<br> Network and Distributed System Security Symposium, 2008. </em><br> [<a href="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.153.3806">abstract</a>][<a href="Comp/NDSS08.pdf">pdf</a>] </font> </td> </tr> <!-- <tr> <td align="left" valign="top"> <font color="#660000" > <b>ASE</b></font></td> <td align="left" valign="top"> <b> N. Gupta, H. He, X. Zhang, and R. Gupta </b>. Locating Faulty Code Using Failure-Inducing Chops <em>,<br> IEEE/ACM International Conference on Automated Software Engineering, 2005. </em><br> [<a href="http://portal.acm.org/citation.cfm?id=1101908.1101948&coll=DL&dl=ACM&CFID=18721242&CFTOKEN=74393333#abstract">abstract</a>][<a href="Comp/ase05.pdf">pdf</a>] </font> </td> </tr> --!> </BODY></HTML> </BODY></HTML>
</DOC>
