<DOC>
<DOCNO> http://www.cs.purdue.edu/academic_programs/courses/canonical_syllabi/cs352.shtml </DOCNO>
<HTML> <HEAD><TITLE>CS 352: Compilers: Principles and Practice</TITLE></HEAD> <body text="#000000" link="#B1946C" vlink="#6F6F6F" alink="#818501" bgcolor="#FFFFFF" topmargin="1"> <table border="0" cellspacing="0" cellpadding="0" width="640"> <tr> <td><a target="_top" href="http://www.cs.purdue.edu/"><img src="/images/lib/headings/subpagetitle.jpg" alt="Department of Computer Sciences @ Purdue University" align="left" hspace="0" vspace="0" border= "0" /></a><br clear="all" /> <a target="_top" href="http://www.cs.purdue.edu/search/"><img src="/images/lib/nav/search.jpg" alt= "Search" align="left" hspace="0" vspace="0" border="0" /></a> <img src="/images/lib/nav/div.jpg" alt="|" align="left" hspace="0" vspace="0" /> <a target="_top" href= "http://www.cs.purdue.edu/resources/"><img src="/images/lib/nav/general_information.jpg" alt="General Information" align="left" hspace="0" vspace="0" border="0" /></a> <img src= "/images/lib/nav/div.jpg" alt="|" align="left" hspace="0" vspace="0" /> <a target="_top" href= "http://www.cs.purdue.edu/academic_programs/"><img src="/images/lib/nav/academics.jpg" alt="Academics" align="left" hspace="0" vspace="0" border="0" /></a> <img src="/images/lib/nav/div.jpg" alt="|" align= "left" hspace="0" vspace="0" /> <a target="_top" href="http://www.cs.purdue.edu/research/"><img src= "/images/lib/nav/research.jpg" alt="Research" align="left" hspace="0" vspace="0" border="0" /></a> <img src="/images/lib/nav/div.jpg" alt="|" align="left" hspace="0" vspace="0" /> <a target="_top" href= "http://www.cs.purdue.edu/directory/"><img src="/images/lib/nav/people.jpg" alt="People" align="left" hspace="0" vspace="0" border="0" /></a> <img src="/images/lib/nav/div.jpg" alt="|" align="left" hspace= "0" vspace="0" /> <a target="_top" href="http://www.cs.purdue.edu/external_relations/"><img src= "/images/lib/nav/external_relations.jpg" alt="External Relations" align="left" hspace="0" vspace="0" border="0" /></a></td> </tr> </table> <p></p> <TABLE WIDTH="600"> <TR><TD ALIGN="CENTER"> <FONT FACE="Arial,Helvetica" SIZE="+3"> <B>CS 352: Compilers: Principles and Practice</B> </FONT> </TD></TR> </TABLE><P> <TABLE WIDTH="700"> <TR><TD> <FONT FACE="Arial,Helvetica"> <!-- Number: CS 352<BR> Title: Compilers: Principles and Practice<BR> Prerequisite(s): CS 250<BR> Corequisite(s): CS 251<BR> Class Hours:<BR> Lab Hours:<BR> Credit Hours:<P> Catalog Description: The theory and practice of programming language translation, compilation, and run-time systems, organized around a significant programming project to build a compiler for a simple but non-trivial programming language. Modules, interfaces, tools. Data structures for tree languages. Lexical analysis, syntax analysis, abstract syntax. Symbol tables, semantic analysis. Translation, intermediate code, basic blocks and traces. Instruction selection, CISC and RISC machines. Liveness analysis, graph coloring register allocation. Supplemental material drawn from garbage collection, object-oriented languages, higher-order languages, dataflow analysis, optimization, polymorphism, scheduling and pipelining, memory hierarchies.<P> --> List of Topics (By Week):<P> 1. Introduction: modules and interfaces, tools and software<P> 2. Programming data structures for tree languages<P> 3. Lexical analysis: lexical tokens, regular expressions, finite automata, lexical analyser generators<P> 4. Parsing I: context-free grammars, predictive parsing<P> 5. Parsing II: LR parsing, parser generators<P> 6. Abstract syntax: semantic actions, abstract parse trees<P> 7. Semantic analysis: symbol tables, type-checking expressions, type-checking declarations<P> 8. Activation records: stack frames, allocation<P> 9. Translation to intermediate code: intermediate representation trees, translation into trees<P> 10. Basic blocks and traces: canonical trees, conditional branches<P> 11. Instruction selection: algorithms for instruction selection, CISC and RISC machines<P> 12. Liveness analysis: solution of basic dataflow equations<P> 13. Register allocation: graph coloring, coloring by simplification, coalescing, register allocation for trees<P> 14. Supplemental material: a selection drawn from garbage collection, object-oriented languages, functional languages, dataflow analysis, optimization, polymorphism, static single-assignment form, scheduling and pipelining, memory hierarchies<P> 15. Summary<P> <!-- Suggested Textbooks: (depending on project implementation language)<P> Appel, A. W. 1998. Modern Compiler Implementation in C. Cambridge University Press. 0-521-58390-X.<BR> Appel, A. W. 1998. Modern Compiler Implementation in Java. Cambridge University Press. 0-521-58388-8.<BR> Appel, A. W. 1998. Modern Compiler Implementation in ML. Cambridge University Press. 0-521-58274-1.<P> Participants in this Revision: Tony Hosking, with input from Jens Palsberg --> 1998.08 </FONT> </TABLE> </BODY> </HTML> </HTML>
</DOC>
