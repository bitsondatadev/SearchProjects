<DOC>
<DOCNO> http://www.cs.purdue.edu/news/11-04-10cloud.html </DOCNO>
<head> <title>Purdue Researchers Accelerate Virtual Machine Communication in the Cloud</title> <style type="text/css"> <!-- .style1 {font-family: Arial, Helvetica, sans-serif} div.figure1 {float: right; width: 40%; border: thin silver solid; margin: 0.5em; padding: 0.5em; } --> </style> </head> <!--#include virtual="/include/header"--> <table width="750" align="center"> <tr> <td><div align="center"> <h1 class="style1">Purdue Researchers Accelerate Virtual Machine Communication in the Cloud</h1> </div></td> </tr> <tr> <td><div align="center"></div></td> </tr> <tr> <td><div class="figure1"> <p align="center"><img src="http://www.cs.purdue.edu/news/images/10cloud.jpg" alt="" align="texttop" /><i>Pictured (from Left to Right): Ardalan Kangarlou, Sahan Gamage, Ramana Kompella, and Dongyan Xu.</i></p> </div> <p class="style1">A group of researchers in the Department of Computer Science at Purdue University, including graduate students <a href="http://www.cs.purdue.edu/homes/akangarl">Ardalan Kangarlou</a>, <a href="http://www.cs.purdue.edu/homes/sgamage/">Sahan Gamage</a>, and Professors <a href="http://www.cs.purdue.edu/homes/kompella/">Ramana Kompella</a> and <a href="http://www.cs.purdue.edu/homes/dxu/">Dongyan Xu</a>, have made an interesting (and, perhaps disturbing!) observation that server consolidation---arguably the key underpinning of cloud computing platforms--- actually has a negative impact on the inter-VM network performance in cloud environments. This happens because sub-millisecond data center network latencies are dominated by scheduling latencies across VMs that share the same CPU. As the overall round-trip time (RTT) increases, TCP connections progress much slower to adjust to the right available bandwidth thus resulting in a loss of throughput. To overcome this problem, they propose a new approach called <a href="http://friends.cs.purdue.edu/dokuwiki/doku.php?id=vsnoop">vSnoop</a>, which mitigates the negative impact by accelerating TCP connections seamlessly within the hypervisor without sacrificing the flexibility, scalability, and economy of virtual machine hosting in the cloud. Their paper describing the design of vSnoop and the prototype implementation over Xen virtual machine platform will appear in the proceedings of the <a href="http://sc10.supercomputing.org/">2010 ACM/IEEE Supercomputing Conference</a>. In recognition of the importance and potential impact of this research, it has been nominated as one of the five<strong> Best Student Paper Award Finalists</strong>. The winner will be announced during the conference that will take place on November 13-19 in New Orleans, Louisiana. </p> <p class="style1"><br /> Virtualization is one of the key enabling technologies behind the emerging cloud computing platforms and services such as Amazon&rsquo;s EC2. In a typical virtualization-based cloud infrastructure, each physical server hosts multiple virtual machines (VMs) that execute applications and services for cloud customers. Such a practice, called VM consolidation, improves resource utilization and scalability of the cloud infrastructure. VM consolidation necessitates the sharing of the same CPU by multiple VMs. However, as more virtual machines are scheduled to access the same core/CPU, the CPU access latency for each virtual machine (i.e. the interval during which a virtual machine waits for the CPU) increases. Such increase in turn raises the round-trip-time of a TCP connection to the virtual machine and adversely affects TCP throughput for those connections. </p> <p class="style1"><br /> To alleviate the impact of virtual machine consolidation, the Purdue researchers propose the vSnoop approach to improve the throughput of TCP connections to consolidated VMs. The key idea behind vSnoop is to allow the driver domain of a physical host to acknowledge TCP packets on behalf of the less privileged production virtual machines &ndash; whenever it is safe to do so. By offloading acknowledgement to the driver domain, vSnoop masks the portion of a TCP packet&rsquo;s round-trip-time that corresponds to virtual machine scheduling. The reduction in round-trip-time prompts the sender to transmit to the virtual machine at a higher rate, effectively saturating the link between the sender and the receiving virtual machine.</p> <p class="style1"> <p class="style1">&nbsp;</p> <p class="style1">&nbsp;</p></td> </tr> <tr> <td>&nbsp;</td> </tr> </table> </body> </html> </html>
</DOC>
