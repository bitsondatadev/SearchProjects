<DOC>
<DOCNO> http://www.cs.purdue.edu/homes/kompella/teaching/sp08/cs636/p2/ </DOCNO>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"> <html> <head> <title>p2.html</title> </head> <body> <div style="text-align: center;"> <h2><br> </h2> <h2>CS 636: Spring 2008<br> </h2> <h2>Programming Assignment 2 : IP lookups using a uni-bit trie. <br> </h2> <h3><span style="color: rgb(255, 0, 0);">Deadline : Apr 3rd -- 9am</span> </h3> <br> </div> Implement the IP lookup algorithm using unibit tries we have discussed in the class using a program (in C, Java, or C++). <br> <br> The input to the IP lookup algorithm is a database that has the fields &lt;ID, prefix, mask, next hop&gt;&nbsp; one per line. The goal is to input this database and store it in a fashion such that it is amenable towards fast lookups. <br> <br> Here are three files provided: <br> <br> <ul> <li><a href="database.txt">Sample Database</a><br> </li> </ul> <ul> <li><a href="input.txt">Sample input</a></li> </ul> <ul> <li><a href="output.txt">Sample output</a> corresponding to the input.</li> </ul> <br> While I do not care about the language you choose to implement your algorithm, I want to care about the amount of time it takes to output your results. To promote the use of efficient data structures, I would do the following. I will award 5 extra points for the submission that has the best timing among all the submissions for a test suite, different than the one that I am giving you as a sample input. <br> <br> This assignment will count <span style="font-weight: bold;">10%</span> towards your grade. <br> <br> Please no cheating or downloading any IP lookup algorithms publicly available. It will not be worth your cause. <br> <br> </body> </html> </html>
</DOC>
