<DOC>
<DOCNO> http://www.cs.purdue.edu/homes/neville/courses/CS390DM.html </DOCNO>
<html> <head> <title>CS39000-DM0: Data Mining & Machine Learning</title> </head> <h2>Data Mining & Machine Learning</h2> <p>CS39000-DM0 &#149; Spring 2012 &#149; Time: TTh 1:30-2:45pm &#149; Location: LWSN B134</p> <p><a href="./390DM/schedule.html">Schedule</a> <!--&#149; <a href="./390DM/project.html">Project</a> &#149; <a href="./390DM/resources.html">Resources</a></p>--> <hr> <h3>Instructor</h3> <p><a href="http://www.cs.purdue.edu/~neville">Professor Jennifer Neville</a> <br>Lawson 2142D &#149; neville[at]cs.purdue.edu &#149; 6-9387 <br>Office hours: Fridays 11:00am-12:00pm <h3>Teaching assistant</h3> <p>Balamurugan Anandan <br>banandan [at] cs.purdue.edu <br>Office hours: Tuesdays 5:30-6:30pm, LWSN B116 <h3>Description</h3> <p>This course will introduce students to the field of data mining and machine learning, which sits at the interface between statistics and computer science. Data mining and machine learning focuses on developing algorithms to automatically discover patterns and learn models of large datasets. This course introduces students to the process and main techniques in data mining and machine learning, including exploratory data analysis, predictive modeling, descriptive modeling, and evaluation. </p> <h3>Learning objectives</h3> Upon completing the course, students should be able to: <ul> <li>Identify key elements of data mining and machine learning algorithms <li>Understand how algorithmic elements interact to impact performance <li>Understand how to choose algorithms for different analysis tasks <li>Analyze data in both an exploratory and targeted manner <li>Implement and apply basic algorithms for supervised and unsupervised learning <li>Accurately evaluate the performance of algorithms, as well as formulate and test hypotheses </ul> <h3>Prerequisites</h3> <p> Prerequisites: CS182, CS251. Concurrent prerequisite: ST350 or ST511. <h3>Text</h3> <p> No text book required. <p>Reading materials will be distributed as an electronic course pack through Purdue's <a href="http://www.itap.purdue.edu/studio/jetpack/">Jet Pack</a>. You can download JetPack readers for iPhone/iPad and Android devices. You can also access through any web browser: <a href="http://www.purdue.edu/jetpack">here</a>. <p>Reading assignments will be posted on the schedule, please check regularly. <br> <h3>Assignments and exams</h3> <p>There will be three homework assignments. Homework assignments will be posted to Blackboard, and they should be submitted there, unless otherwise noted. <p> There will be three programming assignments. Programming assignments should written in python, unless otherwise noted. Programming assignments should be submitted on lore using Turnin. Details will be provided in the assignments. <p>In general, questions about the details of homework assignments should be directed to the TA, though you should feel free to mail the instructor whenever you have a question. Solutions and grading criteria will be available on Blackboard when homework is returned to students. <p>There will be several in class quizzes as well as a midterm and comprehensive final exam. Exams and quizzes will be closed book and closed notes. <h3>Grading</h3> <ul> <li>Quizzes: 5% <li>Homework: 45% <li>Midterm: 20% <li>Final exam: 30% </ul> Grades will be posted on <a href="https://blackboard.purdue.edu/webct/logon/8056011">Blackboard</a>. <h3>Late policy</h3> <p>Assignments are to be submitted via Blackboard or Turnin by the due date listed. Each person will be allowed <b>four</b> days of extensions which can be applied to any combination of assignments during the semester without penalty. After that a late penalty of 20% per day will be assigned. Use of a partial day will be counted as a full day. Use of extension days must be stated explicitly in the late submission (either directly in the submission header or by accompanying email to the TAs), otherwise late penalties will apply. Extensions cannot be uses after the final day of classes (ie., Apr 27). Extension days cannot be rearranged after they are applied to a submission. Use them wisely! <p>Assignments will NOT BE accepted if they are more than five days late. Additional extensions will be granted only due to serious and documented medical or family emergencies. <h3>Academic honesty</h3> Please read the departmental <a href="http://portals.cs.purdue.edu/academic/">academic integrity policy</a>. This will be followed unless we provide written documentation of exceptions. However, we encourage you to interact amongst yourselves: you may discuss and obtain help with basic concepts covered in lectures or the textbook, homework specification (but not solution), and program implementation (but not design). However, unless otherwise noted, work turned in should reflect your own efforts and knowledge. Sharing or copying solutions is unacceptable and could result in failure. We use copy detection software, so do not copy code and make changes (either from the Web or from other students). You are expected to take reasonable precautions to prevent others from using your work. <h3>Additional course policies</h3> Please read the general course policies <a href="http://spaf.cerias.purdue.edu/cpolicy.html">here</a>. <br> <br> <hr> <h3>Course outline</h3> <p><b>Introduction</b> (1 week) <br>What is data mining? What is machine learning? Overview of the process and associated tasks. Example applications. <p><b>Background and basics</b> (1 week) <br>Types of data: attributes, instances. Populations and samples. Random variables and distributions. R and Python. <p><b>Exploratory data analysis</b> (2 weeks) <br>Data cleaning and preprocessing. Sampling. Feature construction and discovery. Visualization methods. Hypothesis testing. <p><b>Predictive Modeling</b> (3 weeks) <br>Classification problem formulation. Algorithmic elements: representation, scoring functions, search, inference. Overview of basic algorithms (e.g., naive Bayes, decision trees, nearest neighbor). Evaluation: metrics, cross-validation, learning curves. <p><b>Understanding and Extending Model Performance</b> (1 week) <br>Error analysis. Feature selection. Ensemble techniques. <p><b>Descriptive Modeling</b> (3 weeks) <br>Clustering problem formulation. Algorithmic elements: representation, scoring functions, search, inference. Overview of basic algorithms (e.g., k-means, hierarchical clustering, spectral clustering). Evaluation: metrics, subjective assessment. <p><b>Pattern Mining</b> (2 weeks) <br>Pattern detection formulation. Algorithmic elements: representation, scoring functions, search, inference. Overview of basic algorithms (e.g., association rules, anomaly detection). Evaluation: metrics, interestingness, understandability. </html>
</DOC>
