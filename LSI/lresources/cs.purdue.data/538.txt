<DOC>
<DOCNO> http://www.cs.purdue.edu/news/4-12-11Azul.html </DOCNO>
<head> <title>Professors Jagannathan and Vitek Acquire World's Largest Flat Symmetric Multiprocessor</title> <style type="text/css"> <!-- .style1 {font-family: Arial, Helvetica, sans-serif} div.figure1 { float: right; width: 20%; border: thin silver solid; margin: 0.5em; padding: 0.5em; height: 25%; } --> </style> </head> <!--#include virtual="/include/header"--> <div align="center"> <table width="869"> <tr> <td width="861"><div align="center"> <h1 class="style1">Professors Jagannathan and Vitek Acquire World's Largest Flat Symmetric Multiprocessor</h1> </div></td> </tr> <tr> <td><div align="center"></div></td> </tr> <tr> <td><div class="figure1"> <p align="center"><span class="style1"><img src="http://cs.purdue.edu/news/images/11azul.jpg" alt="The Vega" border="1" align="middle" /></span></p> <p align="center"><em>Purdue's Computer Science Department is the only in the country to have access to a Azul Vega 3 appliance.</em></p> </div> <p class="style1">Professors <a href="http://www.cs.purdue.edu/people/faculty/suresh/">Suresh Jagannathan</a> and <a href="http://www.cs.purdue.edu/people/faculty/jv/">Jan Vitek</a> have acquired one of the world's largest flat symmetric multiprocessor, an Azul Vega 3 7300 with 864 cores and 384 GB of coherent memory.</p> <p class="style1"> The Vega is the first 64-bit RISC based general purpose processor optimized for virtual machine-based applications. The Vega comes with the Azul virtual machine software which is designed to eliminate many of the traditional scaling constraints of J2EE applications. It allows 32-bit host environments to use 64-bit addressing, supports memory heap sizes up to 199 GB and uses pauseless garbage collection to improve response time, and optimistic thread concurrency to improve application scalability.</p> <p class="style1">Pauseless garbage collection addresses a common problem in applications based on VM architectures: they must pause from time to time in order to reclaim memory, a time consuming process that is analogous to disk defragmentation. Small fragments of free memory are collected into a larger pool so they can be reallocated as requested. Azul Systems has designed unique technologies directly into the system which virtually eliminate application pauses associated with garbage collection.</p> <p class="style1">The Azul Compute Appliance incorporates an innovative lock management scheme to improve throughput. Optimistic thread concurrency allows the processing of all threads to proceed while monitoring whether or not any write conflicts have occurred. If there are no conflicts, the writes are committed and the thread proceeds as expected. If a conflict occurs, the memory writes are rolled back and restarted after the lock contention is resolved. Because conflicts only occur in a very small number of cases, the overall effect can be a significant improvement in application throughput. Developers can use simple coarse-grained locks instead of spending time debugging fine-grained locking mechanisms.</p> <p class="style1">The Azul system will be used on a project funded by CNS grant 0958465 "A Computational Infrastructure for Scalable Transactional Memory Abstractions" from the National Science Foundation, to investigate programming languages and paradigms for highly multithreaded applications. </p> <p class="style1">&nbsp;</p></td> </tr> <tr> <td>&nbsp;</td> </tr> </table> </div> </body> </html> </html>
</DOC>
