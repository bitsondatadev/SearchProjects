<DOC>
<DOCNO> http://www.cs.purdue.edu/homes/ayg/CS525_09/index.html </DOCNO>
<html> <head> <META NAME="content_type" CONTENT="text"> <META NAME="keywords" CONTENT=""> <TITLE>CS525: Parallel Computing</TITLE> <BODY BGCOLOR="#ffffff"> <LEFTMARGIN=0> <MARGIN=0> <font face="Helvetica"> <h1> CS525: Parallel Computing<br> Fall 08. <br> </h1> <strong> Ananth Grama, ayg@cs.purdue.edu, 494 6964 <br> MWF 11:30 - 12:20 PM <br> LWSN 1103 <br> <br> Office Hours: <br> W, 3:00 - 4:30, and by appointment.<br> <br> TA: Karthik Kambatla, kkambatl@cs.purdue.edu<br> Office Hours: Thursday 3:00 - 4:00, and by appointment.<br> <br> </strong> <h2> Course Announcements: </h2> Important announcements relating to the course will be made here. Please look at this area of the web page periodically. Announcements will include (but are not limited to) release of assignments, erratas, and grades. <hr> <h2> <a href = "http://www.cs.purdue.edu/homes/ayg/book/Slides"> Slides for the course.</a> </h2> <h3> <a href = "html/dishonesty_policy.html"> Academic Dishonesty Policy</a>: </h3> Please read this policy before starting as I intend on enforcing it strictly. <h2> Assignment 1: </h2> Problems 2.6, 2.13, 2.24, 2.27, 2.28, and 2.29 of the text `Introduction to Parallel Computing', by Grama et al. Deadline, Sept 26, 2008 in class. <h2> Assignment 2: </h2> Problems 4.5, 4.7, 4.8, 4.16, 4.19, 4.20 of the text `Introduction to Parallel Computing', by Grama et al. Deadline, Oct 10, 2008 in class. <h2> Assignment 3: </h2> Problems 5.1, 5.2, 5.5, 5.6, 5.9, and 5.13 of the text `Introduction to Parallel Computing', by Grama et al. Deadline, Oct 22, 2008 in class. <h2> Assignment 4: </h2> Problems 8.1, 8.4, 8.5, 8.6, 8.12, 8.17, and 8.21 of the text `Introduction to Parallel Computing', by Grama et al. Deadline, Nov 12, 2008 in class. <h2> Assignment 5: </h2> Code quicksort using pthreads. Your program should take as input the list size, generate a random list of required size, take as input the number of threads, and partition the list across threads. Use the first number in anu (sub)list as pivot. Rearrange around pivot and each thread is assigned to either the left or right part of the list. Recurse until you have no more than n/p elements, which can be sorted locally (use qsort function in unix if needed). Execute the code on variable number of threads and plot performance on dual/quad core processors (if available). <h2> Assignment 6: </h2> Problems 9.3, 9.23, 9.30, 10.1, 10.6, 10.8, 11.3, 11.11 of the text `Introduction to Parallel Computing', by Grama et al. <h2> Course Contents: </h2> CS525, Parallel Computing deals with emerging trends in the use of large scale computing platforms ranging from desktop multicore processors and tightly coupled SMPs to message passing clusters and multiclusters. The course consists of four major parts: <ul> <li> Parallel computing platforms: This part of the class outlines parallel computing hardware. Topics covered include processor and memory architectures, SMP and message passing hardware, interconnection networks, network hardware, and evaluation metrics for architectures. Cost models for communication are also developed. <li> Parallel Programming: Programming models and language support for programming parallel platforms is discussed in this part. Message passing using MPI, thread-based programming using POSIX threads, and directive-based programming using OpenMP will be discussed. <li> Parallel Algorithms: Starting from design principles for parallel algorithms, this part develops parallel algorithms for a variety of problems. Various metrics for evaluating these algorithms are also discussed. <li> Applications: A variety of parallel applications from diverse domains such as data analysis, graphics and visualization, particle dynamics, and discrete event and direct numerical simulations will be discussed. </ul> </BODY></HTML> </BODY></HTML>
</DOC>
