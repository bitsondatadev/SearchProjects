<DOC>
<DOCNO> http://www.cs.purdue.edu/homes/xyzhang/slicing.html </DOCNO>
<!dOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"> <HTML><HEAD><TITLE>Xiangyu's Projects - Slicing and Information Flow</TITLE> <META http-equiv=Content-Type content="text/html; charset=iso-8859-1"> <META content=xxx name=Author> <META content="MSHTML 6.00.2800.1264" name=GENERATOR></HEAD> <BODY text=#000000 vLink=#cc0000 aLink=#cc0000 link=#cc0000 background="figures/yellowbg.jpg"> <STYLE type=text/css>A { TEXT-DECORATION: none } </STYLE> <h2> Dynamic Program Slicing and Information Flow Tracking</h2> <img border=0 width=800 height=5 src="figures/line.bmp"> <p> Given a variable at an execution point, dynamic slicing (DS) identifies the set of executed instructions (called dynamic slice) that had directly or transitively contributed to the value of the variable. DS is achieved by tracking program dependences on the fly. The challenges of DS lie in the cost and the large size of the produced slices. <!-- including data and control dependences on the fly. DS was first proposed around 1990 as a debugging aid. However, for a long period of time, people tend to believe that DS is over-expensive and the produced slices are too large to be useful. --!> </p> <p> Dynamic information flow tracking (DIFT) tracks if confidential information such as user password is leaked during program execution, or if untrusted information from external sources contaminates critical part of program execution. Technically, DIFT shares a lot of similarity with DS as it also relies on tracking program dependences, and hence faces similar challenges. </p> <p> We aim to improve the effectiveness and efficiency of program dependence tracking in this project. In the <font size=4><b>efficiency</b></font> aspect, some of our contributions are highlighted as follows. <ul> <li> We have developed a highly efficient dynamic slicing technique. It identifies and removes redundancy in traditional slicing techniques and improves the efficiency by an order of magnitude <a href="Comp/pldi04.pdf">[PLDI'04]</a>. </li> <li> DS algorithms often operate on traces. We have designed a technique that can efficiently trace and represent control flow, program dependences, and variable values in a unified and compressed format <a href="Comp/micro04.pdf">[MICRO'04]</a>. It achieves the space efficiency of 4 bits per executed instruction for real world programs. </li> </ul> In the <font size=4><b> effectiveness</b></font> aspect, we focus on reducing false positives and false negatives in DS and DIFT. <ul> <li> Traditional slices are large because all dependences are considered. We proposed to associate weights to dependence edges based on their semantics and their relations to the correct part of the output. We are able to reduce the size of dynamic slices by orders of magnitude, to less than one hundred statements in many cases <a href="Comp/pldi06.pdf">[PLDI'06]</a>. </li> <li> A great challenge in DIFT is to properly handle control dependence. Considering all control dependences causes a lot of false positives, e.g. bogus information leaks are reported, whereas not considering control dependence at all causes a lot of false negatives, e.g. real information leaks are missed. We identified a specific kind of dependence called strict control dependence that denotes significant information flow, and proposed an efficient online detection algorithm. Considering only strict control dependences reduces false positives and negatives in DIFT by a factor of 3-10 <a href="Comp/issta108-bao.pdf">[ISSTA'10-1]</a>. </li> </ul> <p> Recently, we have also developed a novel dual slicing algorithm for <font size=4><b>concurrent programs</b></font>. It slices two executions simultaneously, one passing and the other failing due to schedule differences, in an alternative and iterative way. The algorithm produces very small slices and naturely overcomes the inherent limitation of DS due to execution omission <a href="Comp/issta085a-weeratunge.pdf">[ISSTA'10-2]</a>. </p> <p> Traditional DS is code centric. Hence, the upper bound size of a slice is the length of the execution, which could be infinite. We proposed a <font size=4><b>memory centric</b></font> technique called memory slicing. It computes the set of live variables that a given variable is dependent on at an execution point. The upper bound of a memory slice is the live memory, which is finite. We showed that memory slicing is effective in debugging <a href="Comp/issta09.pdf">[ISSTA'09]</a>. </p> <h3>Funding</h3> <table> <tr height="40"> <td valign="top" height="40"><img align="left" width="42" height="35" BORDER=0 src="figures/afrl.jpg" alt=""></a></td> <td height="40" valign="top"><font face="Arial" size="2"> <i> Secure End-to-end Service Oriented Architecture</i></a>, Air Force Research Lab, 2010-2011.</td> </tr> <tr height="40"> <td valign="top" height="40"><img align="left" width="42" height="35" BORDER=0 src="figures/nsf.gif" alt=""></a></td> <td height="40" valign="top"><a href="https://www.fastlane.nsf.gov/servlet/showaward?award=0720516"> <font face="Arial" size="2"> <i> Scalable and Efficient Dynamic Information Flow Tracking in Multithreaded Programs</i></a>, NSF-CSR-AES-RCS-0720516, 2007-2009.</td> </tr> <tr height="40"> <td valign="top" height="40"><img align="left" width="42" height="35" BORDER=0 src="figures/nsf.gif" alt=""></a></td> <td height="40" valign="top"><a href="https://www.fastlane.nsf.gov/servlet/showaward?award=0708464"> <font face="Arial" size="2"> <i> An Advanced Infrastructure for Generation, Storage, and Analysis of Program Execution Traces</i></a>, NSF-CRI-0708464, 2007-2008.</td> </tr> </table> <h3> Awards </h3> <ul> <li> <b>2006 ACM SIGPLAN Dissertation Award</b> for thesis ``<i> Fault Localization via Precise Dynamic Slicing</i>''. </li> <li> <b>2003 ICSE Distingushied Paper Award</b> for paper ``<i>Precise Dynamic Slicing Algorithms</i>''. </li> </ul> <h3>Students</h3> <ul> <li> Bin Xin (Google)<br> </li> <li> <a href="http://www.cs.purdue.edu/homes/tbao">Tao Bao</a><br> </li> <li> <a href="http://www.cs.purdue.edu/homes/wsumner">William N. Sumner</a><br> </li> </ul> <h3>Publications</h3> <table> <tr> <td align="left" valign="top"> <font color="#660000" > <b>ISSTA</b></font></td> <td align="left" valign="top"> <b>D. Weeratunge, X. Zhang, W. N. Sumner, and S. Jagannathan</b>. Analyzing Concurrency Bugs using Dual Slicing <em>,<br> International Symposium on Software Testing and Analysis, 2010. </em><br> [<a href="http://portal.acm.org/citation.cfm?id=1831708.1831740&coll=DL&dl=ACM&CFID=18721242&CFTOKEN=74393333#abstract">abstract</a>][<a href="Comp/issta085a-weeratunge.pdf">pdf</a>] </font> </td> </tr> <tr> <td align="left" valign="top"> <font color="#660000" > <b>ISSTA</b></font></td> <td align="left" valign="top"> <b>T. Bao, Y. Zheng, Z. Lin, X. Zhang and D. Xu </b>. Strict Control Dependence and Its Effect on Dynamic Information Flow Analyses <em>,<br> International Symposium on Software Testing and Analysis, 2010. </em><br> [<a href="http://portal.acm.org/citation.cfm?id=1831708.1831711&coll=DL&dl=ACM&CFID=18721242&CFTOKEN=74393333#abstract">abstract</a>][<a href="Comp/issta108-bao.pdf">pdf</a>] </font> </td> </tr> <tr> <td align="left" valign="top"> <font color="#660000" > <b>ISSTA</b></font></td> <td align="left" valign="top"> <b> B. Xin and X. Zhang </b>. Memory Slicing <em>,<br> International Symposium on Software Testing and Analysis, 2009. </em><br> [<a href="http://portal.acm.org/citation.cfm?id=1572272.1572292&coll=DL&dl=ACM&CFID=18721242&CFTOKEN=74393333#abstract">abstract</a>][<a href="Comp/issta09.pdf">pdf</a>] </font> </td> </tr> <!-- <tr> <td align="left" valign="top"> <font color="#660000" > <b>ICSM</b></font></td> <td align="left" valign="top"> <b> C. Liu, X. Zhang, J. Han, Y. Zhang, and B. Bhargava </b>. Failure Indexing: A Dynamic Slicing Based Approach <em>,<br> International Conference on Software Maintenance, 2007. </em><br> [<a href="">abstract</a>][<a href="Comp/failure_indexing.pdf">pdf</a>] </font> </td> </tr> --!> <tr> <td align="left" valign="top"> <font color="#660000" > <b>ISSTA</b></font></td> <td align="left" valign="top"> <b> B. Xin and X. Zhang </b>. Efficient Online Detection of Dynamic Control Dependence <em>,<br> International Symposium on Software Testing and Analysis, 2007. </em><br> [<a href="http://portal.acm.org/citation.cfm?id=1273463.1273489&coll=DL&dl=ACM&CFID=18721242&CFTOKEN=74393333#abstract">abstract</a>][<a href="Comp/issta07.pdf">pdf</a>] </font> </td> </tr> <tr> <td align="left" valign="top"> <font color="#660000" > <b>PLDI</b></font></td> <td align="left" valign="top"> <b> X. Zhang, S. Tallam, N. Gupta, and R. Gupta </b>. Towards Locating Execution Omission Errors <em>,<br> ACM SIGPLAN Conference on Programming Language Design and Implementation, 2007. </em><br> [<a href="http://portal.acm.org/citation.cfm?id=1250734.1250782&coll=DL&dl=ACM&CFID=18721242&CFTOKEN=74393333#abstract">abstract</a>][<a href="Comp/pldi07.pdf">pdf</a>] </font> </td> </tr> <tr> <td align="left" valign="top"> <font color="#660000" > <b>FSE</b></font></td> <td align="left" valign="top"> <b> X. Zhang, S. Tallam, and R. Gupta </b>. Dynamic Slicing Long Running Programs through Execution Fast Forwarding <em>,<br> 14th ACM SIGSOFT Symposium on Foundations of Software Engineering, 2006. </em><br> [<a href="http://portal.acm.org/citation.cfm?id=1181775.1181786&coll=DL&dl=ACM&CFID=18721242&CFTOKEN=74393333#abstract">abstract</a>][<a href="Comp/fse06.pdf">pdf</a>] </font> </td> </tr> <tr> <td align="left" valign="top"> <font color="#660000" > <b>PLDI</b></font></td> <td align="left" valign="top"> <b> X. Zhang, N. Gupta, and R. Gupta </b>. Pruning Dynamic Slices With Confidence <em>,<br> ACM SIGPLAN Conference on Programming Language Design and Implementation, 2006. </em><br> [<a href="http://portal.acm.org/citation.cfm?id=1133981.1134002&coll=DL&dl=ACM&CFID=18721242&CFTOKEN=74393333#abstract">abstract</a>][<a href="Comp/pldi06.pdf">pdf</a>] </font> </td> </tr> <!-- <tr> <td align="left" valign="top"> <font color="#660000" > <b>ASE</b></font></td> <td align="left" valign="top"> <b> N. Gupta, H. He, X. Zhang, and R. Gupta </b>. Locating Faulty Code Using Failure-Inducing Chops <em>,<br> IEEE/ACM International Conference on Automated Software Engineering, 2005. </em><br> [<a href="http://portal.acm.org/citation.cfm?id=1101908.1101948&coll=DL&dl=ACM&CFID=18721242&CFTOKEN=74393333#abstract">abstract</a>][<a href="Comp/ase05.pdf">pdf</a>] </font> </td> </tr> --!> <tr> <td align="left" valign="top"> <font color="#660000" > <b>MICRO</b></font></td> <td align="left" valign="top"> <b> X. Zhang and R. Gupta </b>. Whole Execution Traces <em>,<br> IEEE/ACM 37th International Symposium on Microarchitecture, 2004. </em><br> [<a href="http://portal.acm.org/citation.cfm?id=1038264.1038935&coll=DL&dl=GUIDE&CFID=18721242&CFTOKEN=74393333#abstract">abstract</a>][<a href="Comp/micro04.pdf">pdf</a>] </font> </td> </tr> <tr> <td align="left" valign="top"> <font color="#660000" > <b>PLDI</b></font></td> <td align="left" valign="top"> <b> X. Zhang and R. Gupta </b>. Cost Effective Dynamic Program Slicing <em>,<br> ACM SIGPLAN Conference on Programming Language Design and Implementation, 2004. </em><br> [<a href="http://portal.acm.org/citation.cfm?id=996841.996855&coll=DL&dl=GUIDE&CFID=18721242&CFTOKEN=74393333#abstract">abstract</a>][<a href="Comp/pldi04.pdf">pdf</a>] </font> </td> </tr> <tr> <td align="left" valign="top"> <font color="#660000" > <b>ICSE</b></font></td> <td align="left" valign="top"> <b> X. Zhang, R. Gupta, and Y. Zhang </b>. Effective Forward Computation of Dynamic Slices Using Reduced Ordered Binary Decision Diagrams <em>,<br> IEEE/ACM International Conference on Software Engineering, 2004. </em><br> [<a href="http://portal.acm.org/citation.cfm?id=998675.999454&coll=DL&dl=GUIDE&CFID=18721242&CFTOKEN=74393333#abstract">abstract</a>][<a href="Comp/icse04.pdf">pdf</a>] </font> </td> </tr> <tr> <td align="left" valign="top"> <font color="#660000" > <b>ICSE</b></font></td> <td align="left" valign="top"> <b> X. Zhang, R. Gupta, and Y. Zhang </b>. Precise Dynamic Slicing Algorithms <em>,<br> IEEE/ACM International Conference on Software Engineering</em> (<b>Recipient of ICSE 2003 Distinguished Paper Award.</b>), 2003. <br> [<a href="http://portal.acm.org/citation.cfm?id=776816.776855&coll=DL&dl=GUIDE&CFID=18721242&CFTOKEN=74393333#abstract">abstract</a>][<a href="Comp/icse03.pdf">pdf</a>] </font> </td> </tr> </BODY></HTML> </BODY></HTML>
</DOC>
