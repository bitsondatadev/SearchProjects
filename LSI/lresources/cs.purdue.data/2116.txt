<DOC>
<DOCNO> http://www.cs.purdue.edu/about_us/annual_reports/98/research/tioos.html </DOCNO>
<HTML> <HEAD> <TITLE>Type Inference for Object-Oriented Software</TITLE> </HEAD> <BODY BGCOLOR="WHITE"> <H2>Type Inference for Object-Oriented Software</H2> Principal Investigator: Jens Palsberg <P> Sponsors: NSF, IBM <P> We are developing type inference algorithms for object-oriented software which are practically useful for tool developers and language designers. An example application is tool support for transforming a dynamically-typed prototype application into a statically-typed product, say, from Smalltalk to Java. Prototypes may be developed in an environment where programs are interpreted rather than compiled. This gives a faster turn-around than the edit-compile-run cycle, and relieves the programmer from the Java discipline of static typing. We imagine a scenario where a prototype has been built and significant parts of the code can form the basis of the later product. In that code, some type annotations may be missing, and some types may be less flexible than possible. With tool support, it becomes easier to evolve the code into a robust form which both can be checked by the Java type checker, and where types fully reflect inherent flexibility in the code. Pieces of the software may be candidates for inclusion in a software library, and with highly flexible types, the software can gain the widest use. <P> <FONT COLOR="#ce9c33" SIZE="-1"> <A HREF="http://www.cs.purdue.edu/ar98" TARGET="_top"> <CENTER> 1998 <BR> Annual Research Report</A> <P> <A HREF="http://www.cs.purdue.edu" TARGET="_top">Department of <BR> Computer Sciences</A> </CENTER> </FONT> </BODY> </HTML> </HTML>
</DOC>
